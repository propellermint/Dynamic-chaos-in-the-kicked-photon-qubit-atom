(* ::Package:: *)

(* ::Input:: *)
(*(*Strong coupling*)*)
(*ClearAll["Global`*"]*)
(*Np=1000;*)
(*w=2*Pi;*)
(*ge =1;*)
(*w2 =w *1;*)
(*T =1;*)
(*n=1;*)
(*\[Phi] =0.001;*)
(*tn=T*(n-1);*)
(*p0 = -0.145; q0 = -0.01889; u0 = Sqrt[1/2];*)
(*v0 =  Sqrt[1/2];*)
(*Q = {};*)
(*P = {};*)
(*U = {};*)
(*V = {};*)
(*AppendTo[P,p0];*)
(*AppendTo[Q,q0];*)
(*AppendTo[U,u0];*)
(*AppendTo[V,v0];*)
(*Do[{*)
(*tn=T*(n-1);*)
(*d=NDSolve[*)
(*{p'[t] ==  -w^2*q[t]-ge*(Conjugate[u[t]]*v[t] + u[t]*Conjugate[v[t]]),*)
(*q'[t] ==  p[t],*)
(*I*u'[t] ==  w2/2*u[t]+ ge*q[t]*v[t],*)
(*I*v'[t] ==  -(w2/2)*v[t]+ ge*q[t]*u[t],*)
(*q[tn]==q0, *)
(*p[tn]== p0, *)
(*u[tn]== Cos[\[Phi]] *u0 -I*Sin[\[Phi]]*v0,*)
(*v[tn]== I*Sin[\[Phi]]*u0 +Cos[\[Phi]]*v0},*)
(*{q[t], p[t], u[t], v[t]}, {t,tn,tn + T}];*)
(*q0=q[t]/.First@d/.{t->tn+T};*)
(*p0=p[t]/.First@d/.{t->tn+T};*)
(*u0=u[t]/.First@d/.{t->tn+T};*)
(*v0=v[t]/.First@d/.{t->tn+T};*)
(*AppendTo[P,p0];*)
(*AppendTo[Q,q0];*)
(*AppendTo[U,u0];*)
(*AppendTo[V,v0]}*)
(*,{n,1,Np}];*)
(**)
(*QP = Transpose[{Q, P}];*)
(*UV = Transpose[{U,V}];*)
(*xp =ListPlot[Im[UV], AxesLabel->{Style["u",Large,Bold,Pink],Style["v",Large,Bold,Cyan]},PlotStyle->{RandomColor[],PointSize[0.003]}, PlotLabel->"Imag", PlotRange->Automatic,ImageSize->{500,360}];*)
(*oo = ListPlot[Re[UV],AxesLabel->{Style["u",Large,Bold,Pink],Style["v",Large,Bold,Cyan]},PlotStyle->{RandomColor[],PointSize[0.003]},PlotLabel->"Real",ImageSize->{500,360}];*)
(*a =ListPlot[Re[QP],AxesLabel->{Style["x",Large,Bold,Orange],Style["p",Large,Bold,Blue]},PlotStyle->{RandomColor[],PointSize[0.005]}, ImageSize->{500,360}]*)
(*b =GraphicsGrid[{{oo,xp}}, ImageSize->{1000,500}]*)
(*SetDirectory[NotebookDirectory[]]*)
(*Export[StringJoin["qubit_pq[","ge=",ToString[ge],";","phi=",ToString[\[Phi]//N],";","w=",ToString[w//N],";","w2=",ToString[w2],";","T=",ToString[T],"].jpg"],a]*)
(*Export[StringJoin["qubit_uv_re[","ge=",ToString[ge],";","phi=",ToString[\[Phi]//N],";","w=",ToString[w//N],";","w2=",ToString[w2],";","T=",ToString[T],"].jpg"],oo]*)
(*Export[StringJoin["qubit_uv_im[","ge=",ToString[ge],";","phi=",ToString[\[Phi]//N],";","w=",ToString[w//N],";","w2=",ToString[w2],";","T=",ToString[T],"].jpg"],xp]*)
(**)


(* ::Input:: *)
(**)


(* ::Input:: *)
(*vv = {};*)
(*uu = {};*)
(*pp= {};*)
(*Do[*)
(*Do[*)
(*Np=1000;*)
(*w=2*Pi;*)
(*ge =1;*)
(*w2 =w *1;*)
(*T =1;*)
(*n=1;*)
(*\[Phi] =0.001;*)
(*tn=T*(n-1);*)
(*p0 = i; q0 = j; u0 = Sqrt[1/2];*)
(*v0 = Sqrt[1/2];*)
(*Q = {};*)
(*P = {};*)
(*U = {};*)
(*V = {};*)
(*AppendTo[P,p0];*)
(*AppendTo[Q,q0];*)
(*AppendTo[U,u0];*)
(*AppendTo[V,v0];*)
(*Do[{*)
(*tn=T*(n-1);*)
(*d=NDSolve[*)
(*{p'[t] ==  -w^2*q[t]-ge*(Conjugate[u[t]]*v[t] + u[t]*Conjugate[v[t]]),*)
(*q'[t] ==  p[t],*)
(*I*u'[t] ==  w2/2*u[t]+ ge*q[t]*v[t],*)
(*I*v'[t] ==  -(w2/2)*v[t]+ ge*q[t]*u[t],*)
(*q[tn]==q0, *)
(*p[tn]== p0, *)
(*u[tn]== Cos[\[Phi]] *u0 -I*Sin[\[Phi]]*v0,*)
(*v[tn]== I*Sin[\[Phi]]*u0 +Cos[\[Phi]]*v0},*)
(*{q[t], p[t], u[t], v[t]}, {t,tn,tn + T}];*)
(*q0=q[t]/.First@d/.{t->tn+T};*)
(*p0=p[t]/.First@d/.{t->tn+T};*)
(*u0=u[t]/.First@d/.{t->tn+T};*)
(*v0=v[t]/.First@d/.{t->tn+T};*)
(*AppendTo[P,p0];*)
(*AppendTo[Q,q0];*)
(*AppendTo[U,u0];*)
(*AppendTo[V,v0]}*)
(*,{n,1,Np}];*)
(**)
(*QP = Transpose[{Q, P}];*)
(*UV = Transpose[{U,V}];*)
(*xp =ListPlot[Im[UV], AxesLabel->{Style["u",Large,Bold,Pink],Style["v",Large,Bold,Cyan]},PlotStyle->{RandomColor[],PointSize[0.003]}, PlotLabel->"Imag", PlotRange->Automatic,ImageSize->{500,360}];*)
(*oo = ListPlot[Re[UV],AxesLabel->{Style["u",Large,Bold,Pink],Style["v",Large,Bold,Cyan]},PlotStyle->{RandomColor[],PointSize[0.003]},PlotLabel->"Real",ImageSize->{500,360}];*)
(*a =ListPlot[Re[QP],AxesLabel->{Style["x",Large,Bold,Orange],Style["p",Large,Bold,Blue]},PlotStyle->{RandomColor[],PointSize[0.005]}, ImageSize->{500,360}];*)
(*b =GraphicsGrid[{{oo,xp}}, ImageSize->{1000,500}];*)
(*SetDirectory[NotebookDirectory[]];*)
(*(*Export[StringJoin["qubit_pq[","p0=",ToString[P[[1]]],";","q0=",ToString[Q[[1]]],";","ge=",ToString[ge],";","phi=",ToString[\[Phi]//N],";","w=",ToString[w//N],";","w2=",ToString[w2],";","T=",ToString[T],"].jpg"],a];*)
(*Export[StringJoin["qubit_uv_re[","p0=",ToString[P[[1]]],";","q0=",ToString[Q[[1]]],";","ge=",ToString[ge],";","phi=",ToString[\[Phi]//N],";","w=",ToString[w//N],";","w2=",ToString[w2],";","T=",ToString[T],"].jpg"],oo];*)
(*Export[StringJoin["qubit_uv_im[","p0=",ToString[P[[1]]],";","q0=",ToString[Q[[1]]],";","ge=",ToString[ge],";","phi=",ToString[\[Phi]//N],";","w=",ToString[w//N],";","w2=",ToString[w2],";","T=",ToString[T],"].jpg"],xp];*)*)
(*AppendTo[pp,a];*)
(*AppendTo[uu,oo];*)
(*AppendTo[vv,xp];*)
(*,{j,  -0.0189, -0.01888,0.00001}]*)
(*,{i, -0.146,-0.144,0.001}]*)


(* ::Input:: *)
(*spx=Show[pp]*)
(*suvr=Show[uu]*)
(*suvi=Show[vv]*)
(*Export[StringJoin["qubit_pq_sus[","p0=",ToString[P[[1]]],";","q0=",ToString[Q[[1]]],";","ge=",ToString[ge],";","phi=",ToString[\[Phi]//N],";","w=",ToString[w//N],";","w2=",ToString[w2],";","T=",ToString[T],"].jpg"],spx];*)
(*Export[StringJoin["qubit_uv_re_sus[","p0=",ToString[P[[1]]],";","q0=",ToString[Q[[1]]],";","ge=",ToString[ge],";","phi=",ToString[\[Phi]//N],";","w=",ToString[w//N],";","w2=",ToString[w2],";","T=",ToString[T],"].jpg"],suvr];*)
(*Export[StringJoin["qubit_uv_im_sus[","p0=",ToString[P[[1]]],";","q0=",ToString[Q[[1]]],";","ge=",ToString[ge],";","phi=",ToString[\[Phi]//N],";","w=",ToString[w//N],";","w2=",ToString[w2],";","T=",ToString[T],"].jpg"],suvi];*)


(* ::Input:: *)
(*(*Light coupling*)*)
(*ClearAll["Global`*"]*)
(*Np=4000;*)
(*w=2*Pi;*)
(*ge =0.25;*)
(*w2 =w *1;*)
(*T =1;*)
(*n=1;*)
(*\[Phi] =0.001;*)
(*tn=T*(n-1);*)
(*p0 = -0.071; q0 = -0.0165; u0 = Sqrt[1/2];*)
(*v0 =  Sqrt[1/2];*)
(*Q = {};*)
(*P = {};*)
(*U = {};*)
(*V = {};*)
(*AppendTo[P,p0];*)
(*AppendTo[Q,q0];*)
(*AppendTo[U,u0];*)
(*AppendTo[V,v0];*)
(*Do[{*)
(*tn=T*(n-1);*)
(*d=NDSolve[*)
(*{p'[t] ==  -w^2*q[t]-ge*(Conjugate[u[t]]*v[t] + u[t]*Conjugate[v[t]]),*)
(*q'[t] ==  p[t],*)
(*I*u'[t] ==  w2/2*u[t]+ ge*q[t]*v[t],*)
(*I*v'[t] ==  -(w2/2)*v[t]+ ge*q[t]*u[t],*)
(*q[tn]==q0, *)
(*p[tn]== p0, *)
(*u[tn]== Cos[\[Phi]] *u0 -I*Sin[\[Phi]]*v0,*)
(*v[tn]== I*Sin[\[Phi]]*u0 +Cos[\[Phi]]*v0},*)
(*{q[t], p[t], u[t], v[t]}, {t,tn,tn + T}];*)
(*q0=q[t]/.First@d/.{t->tn+T};*)
(*p0=p[t]/.First@d/.{t->tn+T};*)
(*u0=u[t]/.First@d/.{t->tn+T};*)
(*v0=v[t]/.First@d/.{t->tn+T};*)
(*AppendTo[P,p0];*)
(*AppendTo[Q,q0];*)
(*AppendTo[U,u0];*)
(*AppendTo[V,v0]}*)
(*,{n,1,Np}];*)
(**)
(*QP = Transpose[{Q, P}];*)
(*UV = Transpose[{U,V}];*)
(*xp =ListPlot[Im[UV], AxesLabel->{Style["u",Large,Bold,Pink],Style["v",Large,Bold,Cyan]},PlotStyle->{RandomColor[],PointSize[0.003]}, PlotLabel->"Imag", PlotRange->Automatic,ImageSize->{500,360}];*)
(*oo = ListPlot[Re[UV],AxesLabel->{Style["u",Large,Bold,Pink],Style["v",Large,Bold,Cyan]},PlotStyle->{RandomColor[],PointSize[0.003]},PlotLabel->"Real",ImageSize->{500,360}];*)
(*a =ListPlot[Re[QP],AxesLabel->{Style["x",Large,Bold,Orange],Style["p",Large,Bold,Blue]},PlotStyle->{RandomColor[],PointSize[0.005]}, ImageSize->{500,360}]*)
(*b =GraphicsGrid[{{oo,xp}}, ImageSize->{1000,500}]*)
(*SetDirectory[NotebookDirectory[]]*)
(*Export[StringJoin["qubit_pq[","ge=",ToString[ge],";","phi=",ToString[\[Phi]//N],";","w=",ToString[w//N],";","w2=",ToString[w2],";","T=",ToString[T],"].jpg"],a]*)
(*Export[StringJoin["qubit_uv_re[","ge=",ToString[ge],";","phi=",ToString[\[Phi]//N],";","w=",ToString[w//N],";","w2=",ToString[w2],";","T=",ToString[T],"].jpg"],oo]*)
(*Export[StringJoin["qubit_uv_im[","ge=",ToString[ge],";","phi=",ToString[\[Phi]//N],";","w=",ToString[w//N],";","w2=",ToString[w2],";","T=",ToString[T],"].jpg"],xp]*)


(* ::Input:: *)
(*vv = {};*)
(*uu = {};*)
(*pp= {};*)
(*Do[*)
(*Do[*)
(*Np=4000;*)
(*w=2*Pi;*)
(*ge =0.25;*)
(*w2 =w *1;*)
(*T =1;*)
(*n=1;*)
(*\[Phi] =0.001;*)
(*tn=T*(n-1);*)
(*p0 = i; q0 = j; u0 = Sqrt[1/2];*)
(*v0 = Sqrt[1/2];*)
(*Q = {};*)
(*P = {};*)
(*U = {};*)
(*V = {};*)
(*AppendTo[P,p0];*)
(*AppendTo[Q,q0];*)
(*AppendTo[U,u0];*)
(*AppendTo[V,v0];*)
(*Do[{*)
(*tn=T*(n-1);*)
(*d=NDSolve[*)
(*{p'[t] ==  -w^2*q[t]-ge*(Conjugate[u[t]]*v[t] + u[t]*Conjugate[v[t]]),*)
(*q'[t] ==  p[t],*)
(*I*u'[t] ==  w2/2*u[t]+ ge*q[t]*v[t],*)
(*I*v'[t] ==  -(w2/2)*v[t]+ ge*q[t]*u[t],*)
(*q[tn]==q0, *)
(*p[tn]== p0, *)
(*u[tn]== Cos[\[Phi]] *u0 -I*Sin[\[Phi]]*v0,*)
(*v[tn]== I*Sin[\[Phi]]*u0 +Cos[\[Phi]]*v0},*)
(*{q[t], p[t], u[t], v[t]}, {t,tn,tn + T}];*)
(*q0=q[t]/.First@d/.{t->tn+T};*)
(*p0=p[t]/.First@d/.{t->tn+T};*)
(*u0=u[t]/.First@d/.{t->tn+T};*)
(*v0=v[t]/.First@d/.{t->tn+T};*)
(*AppendTo[P,p0];*)
(*AppendTo[Q,q0];*)
(*AppendTo[U,u0];*)
(*AppendTo[V,v0]}*)
(*,{n,1,Np}];*)
(**)
(*QP = Transpose[{Q, P}];*)
(*UV = Transpose[{U,V}];*)
(*xp =ListPlot[Im[UV], AxesLabel->{Style["u",Large,Bold,Pink],Style["v",Large,Bold,Cyan]},PlotStyle->{RandomColor[],PointSize[0.003]}, PlotLabel->"Imag", PlotRange->Automatic,ImageSize->{500,360}];*)
(*oo = ListPlot[Re[UV],AxesLabel->{Style["u",Large,Bold,Pink],Style["v",Large,Bold,Cyan]},PlotStyle->{RandomColor[],PointSize[0.003]},PlotLabel->"Real",ImageSize->{500,360}];*)
(*a =ListPlot[Re[QP],AxesLabel->{Style["x",Large,Bold,Orange],Style["p",Large,Bold,Blue]},PlotStyle->{RandomColor[],PointSize[0.005]}, ImageSize->{500,360}];*)
(*b =GraphicsGrid[{{oo,xp}}, ImageSize->{1000,500}];*)
(*SetDirectory[NotebookDirectory[]];*)
(*(*Export[StringJoin["qubit_pq[","p0=",ToString[P[[1]]],";","q0=",ToString[Q[[1]]],";","ge=",ToString[ge],";","phi=",ToString[\[Phi]//N],";","w=",ToString[w//N],";","w2=",ToString[w2],";","T=",ToString[T],"].jpg"],a];*)
(*Export[StringJoin["qubit_uv_re[","p0=",ToString[P[[1]]],";","q0=",ToString[Q[[1]]],";","ge=",ToString[ge],";","phi=",ToString[\[Phi]//N],";","w=",ToString[w//N],";","w2=",ToString[w2],";","T=",ToString[T],"].jpg"],oo];*)
(*Export[StringJoin["qubit_uv_im[","p0=",ToString[P[[1]]],";","q0=",ToString[Q[[1]]],";","ge=",ToString[ge],";","phi=",ToString[\[Phi]//N],";","w=",ToString[w//N],";","w2=",ToString[w2],";","T=",ToString[T],"].jpg"],xp];*)*)
(*AppendTo[pp,a];*)
(*AppendTo[uu,oo];*)
(*AppendTo[vv,xp];*)
(*,{j,  -0.01651, -0.01649,0.00001}]*)
(*,{i, -0.072, -0.071, 0.001}]*)


(* ::Input:: *)
(*spx=Show[pp]*)
(*suvr=Show[uu]*)
(*suvi=Show[vv]*)
(*Export[StringJoin["qubit_pq_sus[","p0=",ToString[P[[1]]],";","q0=",ToString[Q[[1]]],";","ge=",ToString[ge],";","phi=",ToString[\[Phi]//N],";","w=",ToString[w//N],";","w2=",ToString[w2],";","T=",ToString[T],"].jpg"],spx];*)
(*Export[StringJoin["qubit_uv_re_sus[","p0=",ToString[P[[1]]],";","q0=",ToString[Q[[1]]],";","ge=",ToString[ge],";","phi=",ToString[\[Phi]//N],";","w=",ToString[w//N],";","w2=",ToString[w2],";","T=",ToString[T],"].jpg"],suvr];*)
(*Export[StringJoin["qubit_uv_im_sus[","p0=",ToString[P[[1]]],";","q0=",ToString[Q[[1]]],";","ge=",ToString[ge],";","phi=",ToString[\[Phi]//N],";","w=",ToString[w//N],";","w2=",ToString[w2],";","T=",ToString[T],"].jpg"],suvi];*)


(* ::Input:: *)
(*(*Strong coupling and Strong Force*)*)
(*ClearAll["Global`*"]*)
(*Np=1000;*)
(*w=2*Pi;*)
(*ge =1.0;*)
(*w2 =w *1;*)
(*T =1;*)
(*n=1;*)
(*\[Phi] =0.01;*)
(*tn=T*(n-1);*)
(*p0 = 0; q0 = -0.0459514; u0 = Sqrt[1/2];*)
(*v0 =  Sqrt[1/2];*)
(*Q = {};*)
(*P = {};*)
(*U = {};*)
(*V = {};*)
(*AppendTo[P,p0];*)
(*AppendTo[Q,q0];*)
(*AppendTo[U,u0];*)
(*AppendTo[V,v0];*)
(*Do[{*)
(*tn=T*(n-1);*)
(*d=NDSolve[*)
(*{p'[t] ==  -w^2*q[t]-ge*(Conjugate[u[t]]*v[t] + u[t]*Conjugate[v[t]]),*)
(*q'[t] ==  p[t],*)
(*I*u'[t] ==  w2/2*u[t]+ ge*q[t]*v[t],*)
(*I*v'[t] ==  -(w2/2)*v[t]+ ge*q[t]*u[t],*)
(*q[tn]==q0, *)
(*p[tn]== p0, *)
(*u[tn]== Cos[\[Phi]] *u0 -I*Sin[\[Phi]]*v0,*)
(*v[tn]== I*Sin[\[Phi]]*u0 +Cos[\[Phi]]*v0},*)
(*{q[t], p[t], u[t], v[t]}, {t,tn,tn + T}];*)
(*q0=q[t]/.First@d/.{t->tn+T};*)
(*p0=p[t]/.First@d/.{t->tn+T};*)
(*u0=u[t]/.First@d/.{t->tn+T};*)
(*v0=v[t]/.First@d/.{t->tn+T};*)
(*AppendTo[P,p0];*)
(*AppendTo[Q,q0];*)
(*AppendTo[U,u0];*)
(*AppendTo[V,v0]}*)
(*,{n,1,Np}];*)
(**)
(*QP = Transpose[{Q, P}];*)
(*UV = Transpose[{U,V}];*)
(*xp =ListPlot[Im[UV], AxesLabel->{Style["u",Large,Bold,Pink],Style["v",Large,Bold,Cyan]},PlotStyle->{RandomColor[],PointSize[0.003]}, PlotLabel->"Imag", PlotRange->Automatic,ImageSize->{500,360}];*)
(*oo = ListPlot[Re[UV],AxesLabel->{Style["u",Large,Bold,Pink],Style["v",Large,Bold,Cyan]},PlotStyle->{RandomColor[],PointSize[0.003]},PlotLabel->"Real",ImageSize->{500,360}];*)
(*a =ListPlot[Re[QP],AxesLabel->{Style["x",Large,Bold,Orange],Style["p",Large,Bold,Blue]},PlotStyle->{RandomColor[],PointSize[0.005]}, ImageSize->{500,360}]*)
(*b =GraphicsGrid[{{oo,xp}}, ImageSize->{1000,500}]*)
(*SetDirectory[NotebookDirectory[]]*)
(*Export[StringJoin["qubit_pq[","ge=",ToString[ge],";","phi=",ToString[\[Phi]//N],";","w=",ToString[w//N],";","w2=",ToString[w2],";","T=",ToString[T],"].jpg"],a]*)
(*Export[StringJoin["qubit_uv_re[","ge=",ToString[ge],";","phi=",ToString[\[Phi]//N],";","w=",ToString[w//N],";","w2=",ToString[w2],";","T=",ToString[T],"].jpg"],oo]*)
(*Export[StringJoin["qubit_uv_im[","ge=",ToString[ge],";","phi=",ToString[\[Phi]//N],";","w=",ToString[w//N],";","w2=",ToString[w2],";","T=",ToString[T],"].jpg"],xp]*)


(* ::Input:: *)
(*vv = {};*)
(*uu = {};*)
(*pp= {};*)
(*Do[*)
(*Do[*)
(*Np=1000;*)
(*w=2*Pi;*)
(*ge =1;*)
(*w2 =w *1;*)
(*T =1;*)
(*n=1;*)
(*\[Phi] =0.01;*)
(*tn=T*(n-1);*)
(*p0 = i; q0 = j; u0 = Sqrt[1/2];*)
(*v0 = Sqrt[1/2];*)
(*Q = {};*)
(*P = {};*)
(*U = {};*)
(*V = {};*)
(*AppendTo[P,p0];*)
(*AppendTo[Q,q0];*)
(*AppendTo[U,u0];*)
(*AppendTo[V,v0];*)
(*Do[{*)
(*tn=T*(n-1);*)
(*d=NDSolve[*)
(*{p'[t] ==  -w^2*q[t]-ge*(Conjugate[u[t]]*v[t] + u[t]*Conjugate[v[t]]),*)
(*q'[t] ==  p[t],*)
(*I*u'[t] ==  w2/2*u[t]+ ge*q[t]*v[t],*)
(*I*v'[t] ==  -(w2/2)*v[t]+ ge*q[t]*u[t],*)
(*q[tn]==q0, *)
(*p[tn]== p0, *)
(*u[tn]== Cos[\[Phi]] *u0 -I*Sin[\[Phi]]*v0,*)
(*v[tn]== I*Sin[\[Phi]]*u0 +Cos[\[Phi]]*v0},*)
(*{q[t], p[t], u[t], v[t]}, {t,tn,tn + T}];*)
(*q0=q[t]/.First@d/.{t->tn+T};*)
(*p0=p[t]/.First@d/.{t->tn+T};*)
(*u0=u[t]/.First@d/.{t->tn+T};*)
(*v0=v[t]/.First@d/.{t->tn+T};*)
(*AppendTo[P,p0];*)
(*AppendTo[Q,q0];*)
(*AppendTo[U,u0];*)
(*AppendTo[V,v0]}*)
(*,{n,1,Np}];*)
(**)
(*QP = Transpose[{Q, P}];*)
(*UV = Transpose[{U,V}];*)
(*xp =ListPlot[Im[UV], AxesLabel->{Style["u",Large,Bold,Pink],Style["v",Large,Bold,Cyan]},PlotStyle->{RandomColor[],PointSize[0.003]}, PlotLabel->"Imag", PlotRange->Automatic,ImageSize->{500,360}];*)
(*oo = ListPlot[Re[UV],AxesLabel->{Style["u",Large,Bold,Pink],Style["v",Large,Bold,Cyan]},PlotStyle->{RandomColor[],PointSize[0.003]},PlotLabel->"Real",ImageSize->{500,360}];*)
(*a =ListPlot[Re[QP],AxesLabel->{Style["x",Large,Bold,Orange],Style["p",Large,Bold,Blue]},PlotStyle->{RandomColor[],PointSize[0.005]}, ImageSize->{500,360}];*)
(*b =GraphicsGrid[{{oo,xp}}, ImageSize->{1000,500}];*)
(*SetDirectory[NotebookDirectory[]];*)
(*(*Export[StringJoin["qubit_pq[","p0=",ToString[P[[1]]],";","q0=",ToString[Q[[1]]],";","ge=",ToString[ge],";","phi=",ToString[\[Phi]//N],";","w=",ToString[w//N],";","w2=",ToString[w2],";","T=",ToString[T],"].jpg"],a];*)
(*Export[StringJoin["qubit_uv_re[","p0=",ToString[P[[1]]],";","q0=",ToString[Q[[1]]],";","ge=",ToString[ge],";","phi=",ToString[\[Phi]//N],";","w=",ToString[w//N],";","w2=",ToString[w2],";","T=",ToString[T],"].jpg"],oo];*)
(*Export[StringJoin["qubit_uv_im[","p0=",ToString[P[[1]]],";","q0=",ToString[Q[[1]]],";","ge=",ToString[ge],";","phi=",ToString[\[Phi]//N],";","w=",ToString[w//N],";","w2=",ToString[w2],";","T=",ToString[T],"].jpg"],xp];*)*)
(*AppendTo[pp,a];*)
(*AppendTo[uu,oo];*)
(*AppendTo[vv,xp];*)
(*,{j,  -0.0459515,-0.0459513,0.00000001}]*)
(*,{i, -0.1, 0,0.1}]*)


(* ::Input:: *)
(*spx=Show[pp]*)
(*suvr=Show[uu]*)
(*suvi=Show[vv]*)
(*Export[StringJoin["qubit_pq_sus[","p0=",ToString[P[[1]]],";","q0=",ToString[Q[[1]]],";","ge=",ToString[ge],";","phi=",ToString[\[Phi]//N],";","w=",ToString[w//N],";","w2=",ToString[w2],";","T=",ToString[T],"].jpg"],spx];*)
(*Export[StringJoin["qubit_uv_re_sus[","p0=",ToString[P[[1]]],";","q0=",ToString[Q[[1]]],";","ge=",ToString[ge],";","phi=",ToString[\[Phi]//N],";","w=",ToString[w//N],";","w2=",ToString[w2],";","T=",ToString[T],"].jpg"],suvr];*)
(*Export[StringJoin["qubit_uv_im_sus[","p0=",ToString[P[[1]]],";","q0=",ToString[Q[[1]]],";","ge=",ToString[ge],";","phi=",ToString[\[Phi]//N],";","w=",ToString[w//N],";","w2=",ToString[w2],";","T=",ToString[T],"].jpg"],suvi];*)



